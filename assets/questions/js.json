[
    {
        "1": "In JavaScript, what will be used for calling the function definition expression:",
        "2": "Which of the following one is the property of the primary expression:",
        "3": "Suppose we have a text 'human' that we want to convert into string without using the 'new' operator. Which is the correct way from the following to do so:",
        "4": "Choose the correct snippet from the following to check if the variable 'a' is not equal the 'NULL':",
        "5": "In JavaScript the x===y statement implies that:",
        "6": "Which of the following function of the String object returns the character in the string starting at the specified position via the specified number of characters?",
        "7": "Which of the following number object function returns the value of the number?",
        "8": "Which of the following givenfunctions of the Number Object formats a number with a different number of digits to the right of the decimal?",
        "9": "In the JavaScript, which one of the following is not considered as an error:",
        "10": "Which of the following type of a variable is volatile?",
        "11": "What is called when a function is defined inside a class?",
        "12": "Which of the following variables takes precedence over the others if the names are the same?",
        "13": "In JavaScript the x===y statement implies that:",
        "14": "In a case, where the value of the operator is NULL , the typeof returned by the unary operator is___.",
        "15": "Check whether the following given statements for the Strictly equal operator are true or false:\n a) If the data type of two values are equal, they are Equal.\n b) If both values are undefined and both are null, they are Equal."
    },
    {
        "1": {
            "a": "Function prototype",
            "b": "Function literal",
            "c": "Function calling",
            "d": "Function declaration"
        },
        "2": {
            "a": "Contains only keywords",
            "b": "basic expressions containing all necessary functions",
            "c": "contains variable references alone",
            "d": "stand-alone expressions"
        },
        "3": {
            "a": "toString()",
            "b": "String(human)",
            "c": "String newvariable='human'",
            "d": "Both human.toString() and String(human)"
        },
        "4": {
            "a": "if(a!==null)",
            "b": "if (a!)",
            "c": "if(a!null)",
            "d": "if(a!=null)"
        },
        "5": {
            "a": "Both x and y are equal in value, type and reference address as well",
            "b": "Both are x and y are equal in value only",
            "c": "Both are equal in the value and data type",
            "d": "Both are not same at all"
        },
        "6": {
            "a": "slice()",
            "b": "split()",
            "c": "substr()",
            "d": "search()"
        },
        "7": {
            "a": "toString()",
            "b": "valueOf()",
            "c": "toLocaleString()",
            "d": "toPrecision()"
        },
        "8": {
            "a": "toExponential()",
            "b": "toFixed()",
            "c": "toPrecision()",
            "d": "toLocaleString()"
        },
        "9": {
            "a": "Syntax error",
            "b": "Missing of semicolons",
            "c": "Division by zero",
            "d": "Missing of Bracket"
        },
        "10": {
            "a": "Mutable variable",
            "b": "Dynamic variable",
            "c": "Volatile variable",
            "d": "Immutable variable"
        },
        "11": {
            "a": "Preprocessor",
            "b": "Triggering Event",
            "c": "RMI",
            "d": "Function/Method"
        },
        "12": {
            "a": "Global variable",
            "b": "The local element",
            "c": "The two of the above",
            "d": "None of the above"
        },
        "13": {
            "a": "Both x and y are equal in value, type and reference address as well",
            "b": "Both are x and y are equal in value only",
            "c": "Both are equal in the value and data type",
            "d": "Both are not same at all"
        },
        "14": {
            "a": "undefined",
            "b": "string",
            "c": "boolean",
            "d": "object"
        },
        "15": {
            "a": "False True",
            "b": "False False",
            "c": "True False",
            "d": "True True"
        }

    },
    {
        "1": "Function literal",
        "2": "stand-alone expressions",
        "3": "Both human.toString() and String(human)",
        "4": "if(a!==null)",
        "5": "Both are equal in the value and data type",
        "6": "substr()",
        "7": "valueOf()",
        "8": "toFixed()",
        "9": "Division by zero",
        "10": "Mutable variable",
        "11": "Function/Method",
        "12":"The local element",
        "13": "Both are equal in the value and data type",
        "14":"object",
        "15":"False True"
    }
]